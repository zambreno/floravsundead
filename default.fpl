
# Joseph Zambreno
# Iowa State University
# default.fpl - default Flora Programming Language file

# The '#' symbol denotes comments.
# Comments are only detected at the beginning of a line


# Select/buy the plants first. The valid options are:
# Peashooter, Repeater, Gatling, Snowpea, Chomper, Wallnut, Tallnut, Portal. You are limited by a total budget.
#
# Each type has their own cost and strengths - see the documentation for more detail.
#
# select P#.plant_name

select P1.wallnut
select P2.wallnut
select P3.wallnut
select P4.wallnut
select P5.wallnut
select P6.peashooter
select P7.peashooter
select P8.peashooter
select P9.peashooter
select P10.peashooter
select P11.repeater
select P12.repeater
select P13.repeater
select P14.repeater
select P15.repeater
select P16.tallnut
select P17.tallnut
select P18.tallnut
select P19.tallnut
select P20.tallnut
select P21.tallnut
select P22.wallnut
#
# Perform an initial (static) placement on the grid. Everything before the "Start: " label
# will be evaluated before the game starts. Rows are in the range [1-5] and cols
# are in the range [1-10]. Grid 1, 1 is reserved for the scoreboard.

# place P# row, col
# Strategy: static placement for everything but P21, P22
# Tallnuts first
place P16 1, 6
place P17 2, 6
place P18 3, 6
place P19 4, 6
place P20 5, 6
# Wallnuts next
place P1 1, 5
place P2 2, 5
place P3 3, 5
place P4 4, 5
place P5 5, 5
# Peashooters next
place P6 1, 3
place P7 2, 3
place P8 3, 3
place P9 4, 3
place P10 5, 3
# Repeaters next
place P11 1, 2
place P12 2, 2
place P13 3, 2
place P14 4, 2
place P15 5, 2

# Specify the run-time commands. The valid commands are:
# place, fire, goto.
# Each command can be made optional based on your team's condition. Prefix the
# instruction with "if" or "if not" and query the state, from the following options:
# ready, alive, damaged, eaten, hit, score, winning, empty.
# Each command can also be identified with a label that can be the target of a "goto"
# command. Execution will begin with the "Start: " command.
#
# Strategy: continued firing loop (because why not?), move P21, P22 as last defense
Start: if not P6.empty, fire P6
if not P7.empty, fire P7
if not P8.empty, fire P8
if not P9.empty, fire P9
if not P10.empty, fire P10
if not P11.empty, fire P11
if not P12.empty, fire P12
if not P13.empty, fire P13
if not P14.empty, fire P14
if not P15.empty, fire P15
Row1_Tallnut: if P1.damaged, place P21 1, 4
if P1.damaged, goto L1
Row2_Tallnut: if P2.damaged, place P21 2, 4
if P2.damaged, goto L1
Row3_Tallnut: if P3.damaged, place P21 3, 4
if P3.damaged, goto L1
Row4_Tallnut: if P4.damaged, place P21 4, 4
if P4.damaged, goto L1
Row5_Tallnut: if P5.damaged, place P21 5, 4
if P5.damaged, goto L1
L1: if empty, goto L1
if not P21.damaged, goto L2
Row2_Wallnut: if not P12.empty, place P22 2, 1
if not P12.empty, goto L2
Row3_Wallnut: if not P13.empty, place P22 3, 1
if not P13.empty, goto L2
Row4_Wallnut: if not P14.empty, place P22 4, 1
if not P14.empty, goto L2
Row5_Wallnut: if not P15.empty, place P22 5, 1
if not P15.empty, goto L2
L2: if empty, goto L2
goto Start
